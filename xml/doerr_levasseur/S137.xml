<?xml version="1.0" encoding="UTF-8"?>
<section xml:id="s-A Brief Introduction to the Application of Boolean Algebra to Switching Theory">
<title>A Brief Introduction to the Application of Boolean Algebra to Switching Theory</title>
<idx>A Brief Introduction to the Application of Boolean Algebra to Switching Theory</idx>



The algebra of switching theory is Boolean algebra. The standard notation used for Boolean algebra operations in most logic design/switching theory
texts is + for $\lor $ and $\bullet $ for $\land $. Complementation is as in this text. Therefore, \(\left(x_1\land \overline{x_2}\right)\lor \left(x_1\land
x_2\right)\lor \left(\overline{x_1}\land x_2\right)\) becomes \(x_1\bullet  \overline{x_2}+x_1\bullet  x_2+\overline{x_1} \bullet  x_2\), or simply
\(x_1\overline{x_2}+x_1x_2+\overline{x_1}x_2\)\(\textrm{ }\). All concepts developed previously for Boolean algebras hold. The only change is purely
notational. We make the change in this section solely to introduce the reader to another frequently used notation. Obviously, we could have continued
the discussion with our previous notation.



The simplest switching device is the on-off switch. If the switch is closed, on, current will pass through it; if it is open, off, current will not
pass through it. If we designate on by true or the logical, or Boolean, 1, and off by false, the logical, or Boolean, 0, we can describe electrical
circuits containing switches by logical, or Boolean,  expressions. The expression \(x_1 \bullet  x_2\) represents the situation in which a series
of two switches appears in a circuit (see Figure 13.7. 1a). In order for current to flow through the circuit, both switches must be on, that is,
have the value 1.


\begin{center}\(\)
\end{center}



Similarly, a pair of parallel switches, as in Figure 13.7.1b, is described algebraically by \(x_1+ x_2\). Many of the concepts in Boolean algebra
can be thought of in terms of switching theory. For example, the distributive law in Boolean algebra (in +, $\bullet $ notation) is:\(x_1 \bullet
 \left(x_2+ x_3\right)\) \(=\) \(x_1 \bullet  x_2+x_1 \bullet  x_3\). Of course, this says the expression on the left is always equivalent to that
on the right. The switching circuit analogue of the above statement is that Figure 13.7.2a is equivalent (as an electrical circuit) to Figure 13.7.2b.



The circuits in a digital computer are composed of large quantities of switches that can be represented as in Figure 13.7.2 or can be thought of
as boxes or gates with two or more inputs (except for the NOT gate) and one output. These are often drawn as in Figure 13.7.3. For example, the OR
gate, as the name implies, is the  logical/Boolean OR function. The on-off switch function in Figure 13.7.3a in gate notation is Figure 13.7.3b.


\begin{center}\(\)
\end{center}



Either diagram indicates that the circuit will conduct current if and only if \(f\left(x_1, x_2, x_3\right)\) is true, or 1. We list the gate symbols
that are widely used in switching theory in Figure 13.7.4 with their names. The names mean, and are read, exactly as they appear. For example, NAND
means $\texttt{"}$not \(x_1 \textrm{ and} x_2\)$\texttt{"}$ or algebraically, \(\overline{x_1\land x_2}\), or \(\overline{x_1 \bullet  x_2}\).



The circuit in Figure 13.7.5a can be described by gates. To do so, simply keep in mind that the Boolean function \(f\left(x_1, x_2\right)=x_1 \bullet
 \overline{x_2}\) of this circuit contains two operations. The operation of complementation takes precedence over that of <q>and,</q> so we have
Figure 13.7.5b.





<subsubsection xml:id="sss-Example 13-7-1"><idx>Example 13.7.1.</idx> The switching circuit in Figure 13.7.6a can be expressed through the logic, or gate, circuit in Figure 13.7.6b.


\begin{center}\(\)
\end{center}



We leave it to the reader to analyze both figures and to convince him- or herself that they do describe the same circuit. The circuit can be described
algebraically as



\(f\left(x_1, x_2, x_3\right)=\left(\left( x_1 + x_2\right) + \left(x_1 + x_3\right)\right) \bullet  x_1 \bullet  \overline{x_2}.\)



We can use basic Boolean algebra laws to simplify or minimize this Boolean function (circuit):



\(f\left(x_1, x_2, x_3\right)=\left(\left(x_1 + x_2\right) + \left(x_1 + x_3\right)\right) \bullet  x_1 \bullet  \overline{x_2}\textrm{            
                                     }\) 



\(= \left(x_1+ x_2 + x_3\right) \bullet  x_1 \bullet  x_2\\
\\
= \left(x_1 \bullet  x_1 \bullet  \overline{x_2} + x_2 \bullet  x_1 \bullet \overline{x_2} + x_3 \bullet  x_1 \bullet  \overline{x_2} \right.\)




\(= x_1\bullet  \overline{x_2} + 0 \bullet  x_1 + x_3 \bullet  x_1 \bullet  \overline{x_2}\textrm{                          }\\
\\
=x_1 \bullet  \overline{x_2} + x_3 \bullet  x_1 \bullet  \overline{x_2} \\
\\
= x_1 \bullet  \left(\overline{x_2} + \overline{x_2} \bullet  x_3\right) \\
\\
= x_1 \bullet  \overline{x_2}\bullet  \left(1 + x_3\right)\\
\\
= x_1 \bullet  \overline{x_2} .\)



The circuit for <m>f</m> may be described as in Figure 13.7.5. This is a less expensive circuit since it involves considerably less hardware.


\begin{center}\(\)
\end{center}



The table for f . is:







\(\begin{array}{c|c}
 x_1\textrm{    }x_2\textrm{    }x_3 &amp; f\left(x_1,x_2,x_3\right) \\
\hline
 0\textrm{     }0\textrm{     }00\textrm{     }0\textrm{     }10\textrm{     }1\textrm{     }00\textrm{     }1\textrm{     }11\textrm{     }0\textrm{     }01\textrm{     }0\textrm{ 
   }11\textrm{     }1\textrm{     }01\textrm{     }1\textrm{     }1 &amp; 00001100 \\
\end{array}\)



The Venn diagram that represents <m>f</m> is the shaded portion in Figure 13.7.7. From this diagram, we can read off the minterm normal form of
<m>f</m>:



\(f\left(x_1, x_2, x_3\right)=x_1 \bullet  \overline{x_2} \bullet  \overline{x_3} + x_1 \bullet  \overline{x_2} \bullet  x_3.\)


\begin{center}\(\)
\end{center}


\caption{\pmb{ Figure 13.7.7}}



The circuit (gate) diagram appears in Figure 13.7.8.



How do we interpret this? We see that \(f\left(x_1, x_2, x_3\right)= 1\) when \(x_1=1, x_2=0\), and \(x_3=0\) or \(x_3=1\). Current will be conducted
through the circuit when switch \(x_1\) is on, switch \(x_2\) is off, and when switch \(x_3\) is either off or on.


\begin{center}\(\)
\end{center}



We close this section with a brief discussion of minimization, or reduction, techniques. We have discussed two in this text: algebraic (using basic
Boolean rules) reduction and the minterm normal form technique. Other techniques are discussed in switching theory texts. When one reduces a given
Boolean function, or circuit, it is possible to obtain a circuit that does not look simpler, but may be more cost effective, and is, therefore, simpler
with respect to time. We illustrate with an example.





<subsubsection xml:id="sss-Example 13-7-2"><title>Example 13.7.2</title><idx>Example 13.7.2.</idx> Consider the Boolean function of Figure 13.7.9a is \(f\left(x_1, x_2, x_3, x_4\right)=\) \(\left(\left(x_1 \bullet
 \overline{\left.x_2\right)} \bullet  \overline{\left.x_3\right)} \bullet  x_4\right.\right.\), which can also be diagrammed as in Figure 13.7.9b.


\begin{center}\(\)
\end{center}



Is Circuit b simpler than Circuit a? Both circuits contain the same number of gates, so the hardware costs (per gate) would be the same. Hence, intuitively,
we would guess that they are equivalent with respect to simplicity. However, the signals \(x_3\) and \(x_4\) in Circuit a pass through three levels
of gating before reaching the output. All signals in Circuit b go through only two levels of gating (disregard the NOT gate when counting levels).
Each level of logic (gates) adds to the time delay of the development of a signal at the output. In computers, we want the time delay to be as small
as possible. Frequently, speed can be increased by decreasing the number of levels in a circuit. However, this frequently forces a larger number
of gates to be used, thus increasing costs. One of the more difficult jobs of a design engineer is to balance off speed with hardware costs (number
of gates).



One final remark on notation: The circuit in Figure 13.7.10a can be written as in Figure 13.7.10b, or simply as in Figure 13.7.10c.




<exercises xml:id="exercises-13-7">
<title>Exercises for Section 13.7</title>




A Exercises

<exercise number="1"><statement> (a) Write all inputs and outputs from Figure 13.7.11 and show that its Boolean function is \(f\left(x_1, x_2, x_3\right)\) \(=\overline{\left(\left(x_1
+ x_2\right) \bullet  x_3\right)} \bullet  \left(x_1 + x_2\right).\)</p></li>
<li><p>  Simplify \(f\) algebraically.</p></li>
<li><p>  Find the minterm normal form of <m>f</m>.</p></li>
<li><p>  Draw and compare the circuit (gate) diagram of parts b and c above.</p></li>
<li><p>  Draw the on-off switching diagram of <m>f</m> in part a. 


\begin{center}\(\)
\end{center}


\begin{center}\(\)
\end{center}</p></li>
<li><p> Write the table of the Boolean function f . in part a and interpret the results.
</statement></exercise>
<exercise number="2"><statement> Given Figure 13.7.12:


\begin{center}\(\)
\end{center}

<ol label="(a)">
<li><p>  Write the Boolean function that represents the given on-off circuit.</p></li>
<li><p>  Show that the Boolean function obtained in answer to part a can be reduced to \(f\left(x_1, x_2\right)=x_1\). Draw the on-off circuit diagram
of this simplified representation.</p></li>
<li><p>  Draw the circuit (gate) diagram of the given on-off circuit diagram.</p></li>
<li><p>  Determine the minterm normal of the Boolean function found in the answer to part a or given in part b; they are equivalent.</p></li>
<li><p> Discuss the relative simplicity and advantages of the circuit gate diagrams found in answer to parts c and d.
</statement></exercise>
<exercise number="3"><statement> (a) Write the circuit (gate) diagram of



\(f\left(x_1, x_2, x_3\right)=\left(x_1 \bullet  x_2 + x_3\right) \bullet  \left(x_2 + x_3\right) + x_3.\)</p></li>
<li><p>  Simplify the function in part a by using basic Boolean algebra laws.</p></li>
<li><p> Write the circuit (gate) diagram of the result obtained in part b.</p></li>
<li><p> Draw the on-off switch diagrams of parts a and b.
</statement></exercise>
<exercise number="4"><statement> Consider the Boolean function



\(f\left(x_1, x_2, x_3, x_4\right)=x_1 + \left(x_2 \bullet  \left(\overline{x_1} + x_4\right) + x_3 \bullet  \left(\overline{x_2} + \overline{x_4}\right)\right).\)

<ol label="(a)">
<li><p> Simplify <m>f</m> algebraically.</p></li>
<li><p> Draw the switching (on-off) circuit of <m>f</m> and the reduction of <m>f</m> obtained in part a.</p></li>
<li><p> Draw the circuit (gate) diagram of f . and the reduction of f . obtained in answer to part a.
