<?xml version="1.0" encoding="UTF-8" ?>
<section xml:id="s-what-is-a-tree">
<title>What Is a Tree? </title>
<idx>What Is a Tree? </idx>
<subsection><title>Definition</title>

<p>What distinguishes trees from other types of graphs is the absence of certain paths called cycles. Recall that a path is a sequence of consecutive edges in a graph, and a circuit is a path that begins and ends at the same vertex.</p>

<definition xml:id="def-cycle"><title>Cycle</title>
<idx>Cycle</idx><notation><usage>C_n</usage><description>A cycle with <m>n</m> edges.</description></notation><statement><p> A cycle is a circuit whose edge list contains no duplicates.  It is customary to use <m>C_n</m> to denote a cycle with \(n\) edges.</p></statement></definition>


<p>The simplest example of a cycle in an undirected graph is a pair of vertices with two edges connecting them. Since trees are cycle-free, we can rule out all multigraphs from consideration as trees.</p>



<p>Trees can either be undirected or directed graphs. We will concentrate on the undirected variety in this chapter.</p>

<definition xml:id="def-tree"><title>Tree</title>
<idx>Tree</idx>
<statement><p>An undirected graph is a tree if it is connected and contains no cycles or self-loops.</p></statement></definition>

 <example xml:id="ex-some-trees"><title>Some trees and non-trees</title>
 <figure xml:id="fig-some-trees">
		 <caption>Some trees and some non-trees
		 </caption>
		 <image width="100%" source="images/fig-some-trees.png">
			  <description>Some trees and some non-trees</description>
		 </image>
   </figure>
<p><ol label="(a)">
<li><p> Graphs i, ii and iii in <xref ref="fig-some-trees" text="type-global"/> are all trees, while graphs iv, v, and vi are not trees.</p>
 
</li>
<li><p> A \(K_2\) is a tree. However, if \(n\geq  3\), a \(K_n\) is not a tree.</p></li>
<li><p> In a loose sense, a botanical tree is a mathematical tree. There are usually no cycles in the branch structure of a botanical tree.</p></li>
<li><p> The structures of some chemical compounds are modeled by a tree. For example, butane <xref ref="fig-butane" /> consists of four carbon atoms and ten hydrogen atoms, where an edge between two atoms represents a bond between them. A bond is a force that keeps two atoms together. The same set of atoms can be linked together in a different tree structure to give us the compound isobutane <xref ref="fig-isobutane" />. There are some compounds whose graphs are not trees. One example is benzene <xref ref="fig-benzene" />.</p>
</li>
</ol></p>
<sidebyside>
            <figure xml:id="fig-butane">
                <caption>Butane
                </caption>
                <image width="100%" source="images/fig-butane.png">
                    <description>Structure of Butane</description>
                </image>
            </figure>
            <figure xml:id="fig-isobutane">
                <caption>Isobutane
                </caption>
                <image width="100%" source="images/fig-isobutane.png">
                    <description>Structure of Isobutane</description>
                </image>
            </figure> 
            <figure xml:id="fig-benzene">
                <caption>Benzene
                </caption>
                <image width="100%" source="images/fig-benzene.png">
                    <description>Structure of Benzene</description>
                </image>
            </figure>
</sidebyside>

 </example>



<p>One type of graph that is not a tree, but is closely related, is a forest.</p>

<definition xml:id="def-forest"><title>Forest</title>
<idx>Forest.</idx><statement><p> A forest is an undirected graph whose components are all trees.</p></statement></definition>



<example xml:id="ex-a-forest"><title>A forest</title><p>The top half of <xref ref="fig-some-trees" text="type-global" /> can be viewed as a forest of three trees.  Graph (vi) in this figure is also a forest.</p></example> 

</subsection>
<subsection><title>Conditions for a graph to be a tree</title>


<p>We will now examine several conditions that are equivalent to the one that defines a tree. The following theorem will be used as a tool in proving that the conditions are equivalent.</p>

<lemma xml:id="lemma-two-paths">
<statement><p>Let \(G = (V, E)\) be an undirected graph with no self-loops, and let \(v_a, v_b\in V\). If two different simple paths exist
between \(v_a\) and \(v_b\), then there exists a cycle in \(G\).</p></statement>
<proof><p>Let \(p_1= \left(e_1, e_2, \ldots , e_m \right)\) and \(p_2=\left(f_1,f_2,\ldots , f_n\right)\) be two different simple paths from \(v_a\)
to \(v_b\). The first step we will take is to delete from \(p_1\) and \(p_2\) the initial edges that are identical. That is, if \(e_1= f_1\),
\(e_2= f_2, \dots \), \(e_{j}= f_j\), and \(e_{j+1}\neq f_{j+1}\) delete the first <m>j</m> edges of both paths. Once this is done, both paths
start at the same vertex, call it \(v_c\), and both still end at \(v_b\). Now we construct a cycle by starting at \(v_c\) and following what is left of \(p_1\) until we first meet what is left of \(p_2\). If this first meeting occurs at vertex \(v_d\), then the remainder of the cycle is completed by following the portion of the reverse of \(p_2\) that starts at \(v_d\) and ends at \(v_c\).</p> </proof>
</lemma>  

<theorem xml:id="theorem-tree-conditions"><title>Equivalent Conditions for a Graph to be a Tree</title>
<statement><p>Let \(G = (V, E)\) be an undirected graph with no self-loops and \(\lvert V \rvert =n\). The following are all equivalent:</p>
<p><ol label="(1)">
<li><p> <m>G</m> is a tree.</p></li>
<li><p> For each pair of distinct vertices in <m>V</m>, there exists a unique simple path between them.</p></li>
<li><p> <m>G</m> is connected, and if \(e\in E\), then \((V, E-\{e\})\) is disconnected.</p></li>
<li><p> <m>G</m> contains no cycles, but by adding one edge, you create a cycle.</p></li>
<li><p> <m>G</m> is connected and \(\lvert E \rvert =n-1 \).</p></li>
</ol></p>
</statement>
<proof>
<p>Proof Strategy. Most of this theorem can be proven by proving the following chain of implications: \((1) \Rightarrow  (2)\), \((2) \Rightarrow  (3)\), \((3)\Rightarrow (4)\), and \((4) \Rightarrow (1)\). Once these implications have been demonstrated, the transitive closure of \(\Rightarrow\) on \({1, 2, 3, 4}\) establishes the equivalence of the first four conditions. The proof that Statement 5 is equivalent to the first four can be done by induction, which we will leave to the reader.</p>
<p>\((1) \Rightarrow  (2)\) (Indirect). Assume that <m>G</m> is a tree and that there exists a pair of vertices between which there is
either no path or there are at least two distinct paths. Both of these possibilities contradict the premise that <m>G</m> is a tree. If no path exists, <m>G</m> is disconnected, and if two paths exist, a cycle can be obtained by <xref ref="theorem-tree-conditions" text="type-global" />.</p>
<p>\((2) \Rightarrow  (3)\). We now use Statement 2 as a premise. Since each pair of vertices in <m>V</m> are connected by exactly one path, \(G\) is connected. Now if we select any edge <m>e</m> in <m>E</m>, it connects two vertices, \(v_1\) and \(v_2\). By (2), there is no simple path connecting \(v_1\) to \(v_2\) other than \(e\). Therefore, no path at all can exist between \(v_1\) and \(v_2\) in \((V, E - \{e\})\). Hence \((V, E - \{e\})\) is disconnected.</p>
<p>\((3)\Rightarrow (4)\). Now we will assume that Statement 3 is true. We must show that <m>G</m> has no cycles and that adding an edge to \(G\) creates a cycle. We will use an indirect proof for this part. Since (4) is a conjunction, by DeMorgan's Law its negation is a disjunction and
we must consider two cases. First, suppose that <m>G</m> has a cycle. Then the deletion of any edge in the cycle keeps the graph connected, which
contradicts (3). The second case is that the addition of an edge to <m>G</m> does not create a cycle. Then there are two distinct paths between
the vertices that the new edge connects. By <xref ref="lemma-two-paths" text="type-global" />, a cycle can then be created, which is a contradiction.</p>

<p>\((4) \Rightarrow (1)\) Assume that <m>G</m> contains no cycles and that the addition of an edge creates a cycle. All that we need to prove to verify that <m>G</m> is a tree is that <m>G</m> is connected. If it is not connected, then select any two vertices that are not connected.
If we add an edge to connect them, the fact that a cycle is created implies that a second path between the two vertices can be found which is in the original graph, which is a contradiction. </p>
</proof>
</theorem> 


<p>The usual definition of a directed tree is based on whether the associated undirected graph, which is created by <q>erasing</q> its directional arrows, is a tree. In Section 10.3 we will introduce the rooted tree, which is a special type of directed tree.</p>

</subsection>

<exercises xml:id="exercises-10-1">
<title>Exercises for Section 10.1</title>

<exercise number="1" xml:id="exercise-trees">
<statement><p>Given the following vertex sets, draw all possible undirected trees that connect them.</p>
<p><ol label="(a)">
<li><p> \(V_a= \{\text{right},\text{left}\}\) </p></li>
<li><p> \(V_b = \{+,-,0\}\)</p></li>
<li><p> \(V_c = \{\text{north}, \text{south}, \text{east}, \text{west}\}\).</p></li>
</ol></p>
</statement>
<answer><p> The number of trees are: (a) 1, (b) 3, and (c) 16.  The trees that connect \(V_c\) are:</p>
       <figure xml:id="fig-sol-10-1-1"><caption/>
                <image width="100%" source="images/fig-sol-10-1-1.png">
                    <description>Solution to exercise 10-1-1</description>
                </image>
            </figure>
</answer></exercise>
<exercise number="2"><statement><p> Are all trees planar? If they are, can you explain why? If they are not, you should be able to find a nonplanar tree.</p>
</statement></exercise>
<exercise number="3"><statement><p> Prove that if <m>G</m> is a simple undirected graph with no self-loops, then <m>G</m> is a tree if and only if <m>G</m> is connected and 
\(\lvert E \rvert = \lvert V \rvert - 1\).</p>
</statement><hint><p> Use induction on \(\lvert E\rvert \).
</p></hint></exercise>
<exercise number="4"><statement>
<p><ol label="(a)">
<li><p>Prove that if \(G = (V, E)\) is a tree and \(e \in E\), then \((V, E - \{e\})\) is a forest of two trees.</p></li>
<li><p> Prove that if \(\left(V_1,E_1\right.\)) and \(\left(V_2,E_2\right)\) are disjoint trees and <m>e</m> is an edge that connects a vertex in \(V_1\) to a vertex in \(V_2\), then \(\left(V_1\cup V_2, E_1\cup E_2\cup \{e\}\right)\) is a tree.</p></li>
</ol></p>
</statement></exercise>
<exercise number="5"><statement><p><ol label="(a)">
<li><p>Prove that any tree with at least two vertices has at least two vertices of degree 1.</p></li>
<li><p> Prove that if a tree has \(n\) vertices,  \(n \geq 4\), and is not a path graph, \(P_n\), then it has at least three vertices of degree 1.</p></li>
</ol></p>
</statement>
<answer><p><ol label="(a)">
<li><p>Assume that \((V,E)\) is a tree with \(\left| V\right| \geq 2\), and all but possibly one vertex in <m>V</m> has degree two or more. 
<me>
\begin{split}
2\lvert E \rvert =\sum_{v \in V}{\deg(v)} \geq 2 \lvert V \rvert -1 &amp;\Rightarrow
    \lvert E\vert  \geq \lvert V\rvert -\frac{1}{2}\\
 &amp;\Rightarrow \lvert E\rvert \geq \lvert V\rvert\\
 &amp; \Rightarrow (V,E) \textrm{ is not a tree.}
\end{split}
</me>
</p></li>
<li><p> The proof of this part is similar to part a in that we can infer \(2\lvert E\rvert \geq 2 \lvert V\rvert -1\), using the fact that a non-chain tree has at least one vertex of degree three or more.</p></li>
</ol></p>
</answer>
</exercise>

</exercises>
</section>