<?xml version="1.0" encoding="UTF-8"?>
<section xml:id="s-truth-tables"><title>Truth Tables and Propositions Generated by a Set</title>
<subsection xml:id="truth-tables"><title>Truth Tables</title>
<p>Consider the compound proposition \(c= (p \land  q)\lor  (\neg q \land  r)\), where <m>p</m>, <m>q</m>, and <m>r</m> are propositions. This is an example of a proposition generated by <m>p</m>, <m>q</m>, and <m>r</m>. We will define this terminology later in the section. Since each of the three simple propositions has two possible truth values, it follows that there are eight different combinations of truth values that determine a value for <m>c</m>. These values can be obtained from a truth table for <m>c</m>. To construct the truth table, we build <m>c</m> from <m>p</m>, <m>q</m>, and <m>r</m> and from the logical operators. The result is the truth table below. Strictly speaking, the first three columns and the last column make up the truth table for <m>c</m>. The other columns are work space needed to build up to <m>c</m>.</p>

<table xml:id="tt32-1">
<caption>Truth Table for <m>c= (p \land  q)\lor  (\neg q \land  r)</m></caption>
<tabular  halign="center">
<row><cell><m>p</m></cell><cell><m>q</m></cell><cell><m>r</m></cell><cell><m>p\land q</m></cell><cell><m>\neg q</m></cell><cell><m>\neg q\land r</m></cell><cell><m>(p\land q)\lor (\neg q\land r)</m></cell></row>
<row><cell>0</cell><cell>0</cell><cell>0</cell><cell>0</cell><cell>1</cell><cell>0</cell><cell>0</cell></row>
<row><cell>0</cell><cell>0</cell><cell>1</cell><cell>0</cell><cell>1</cell><cell>1</cell><cell>1</cell></row>
<row><cell>0</cell><cell>1</cell><cell>0</cell><cell>0</cell><cell>0</cell><cell>0</cell><cell>0</cell></row>
<row><cell>0</cell><cell>1</cell><cell>1</cell><cell>0</cell><cell>0</cell><cell>0</cell><cell>0</cell></row>
<row><cell>1</cell><cell>0</cell><cell>0</cell><cell>0</cell><cell>1</cell><cell>0</cell><cell>0</cell></row>
<row><cell>1</cell><cell>0</cell><cell>1</cell><cell>0</cell><cell>1</cell><cell>1</cell><cell>1</cell></row>
<row><cell>1</cell><cell>1</cell><cell>0</cell><cell>1</cell><cell>0</cell><cell>0</cell><cell>1</cell></row>
<row><cell>1</cell><cell>1</cell><cell>1</cell><cell>1</cell><cell>0</cell><cell>0</cell><cell>1</cell></row>
</tabular>
</table>

<p>Note that the first three columns of the truth table are an enumeration of the eight three-digit binary integers. This standardizes the order in
which the cases are listed. In general, if <m> c</m> is generated by <m>n</m> simple propositions, then the truth table for <m>c</m> will
have \(2^n\) rows with the first <m>n</m> columns being an enumeration of the <m>n</m> digit binary integers. In our example, we can see at
a glance that for exactly four of the eight cases, <m>c</m> will be true. For example, if <m>p</m> and <m>r</m> are true and <m>q</m>
is false (the sixth case), then <m>c</m> is true.</p>


<p>Let <m>S</m> be any set of propositions. We will give two definitions of a proposition generated by S. The first is a bit imprecise,
but should be clear. The second definition is called a <em>recursive definition</em>. If you find it confusing, use the first definition and return
to the second later.</p>
</subsection>
<subsection xml:id="proposition-generated-by-set"><title>Propositions Generated by a Set</title>
<definition xml:id="def-proposition-generated-by-set"><title>Proposition Generated by a Set</title>
<statement><p>Let <m>S</m> be any set of propositions. A proposition generated by <m>S</m> is any valid combination of propositions in <m>S</m> with conjunction, disjunction, and negation.  Or, to be more precise,</p>
<p><ol label="(a)"><li><p>If <m>p \in S</m>, then <m>p</m> is a proposition generated by <m>S</m>, and </p></li>
<li><p>If <m>x</m> and <m>y</m> are propositions generated by <m>S</m>, then so are \((x)\), \(\neg x\), \(x\lor y\) , and \(x\land y\).</p></li>
</ol></p>
</statement>
</definition>

<p>Note: We have not included the conditional and biconditional in the definition because they can both be generated from conjunction, disjunction, and negation, as we will see later.</p>

<p>If <m>S</m> is a finite set, then we may use slightly different terminology. For example, if \(S = \{p, q, r\}\), we might say that a proposition is generated by <m>p, q</m>, and <m>r</m> instead from \(\{p, q, r\}\). </p>



<p>It is customary to use the following hierarchy for interpreting propositions, with parentheses overriding this order:
</p>
<p><ul><li><p>First: Negation</p></li>
<li><p>Second: Conjunction</p></li>
<li><p>Third: Disjunction</p></li>
<li><p>Fourth: The conditional operation</p></li>
<li><p>Fifth: The biconditional operation</p></li>
</ul></p>


<p>Within any level of the hierarchy, work from left to right. Using these rules, \(p \land  q \lor  r\) is taken to mean \((p \land  q)\lor  r\). These precedence rules are universal, and are exactly those used by computer languages to interpret logical expressions. </p>



<example xml:id="hierarchy-examples"><title>Examples of the Hierarchy of Logical Operations</title>
<statement><p> A few shortened expressions and their fully parenthesized versions:</p>
<p><ol label="(a)">
<li><p> \(p \land  q \land  r\) is \((p \land  q) \land  r\).</p></li>
<li><p> \(\neg p \lor  \neg r\) is \((\neg p) \lor  (\neg r)\).</p></li>
<li><p>  \(\neg  \neg p\) is \(\neg (\neg p)\).</p></li>
<li><p>  \(p \leftrightarrow q\land r\rightarrow s \) is \(p \leftrightarrow ((q\land r)\rightarrow s)\).</p></li>
</ol></p>
</statement>
</example>


<p>A proposition generated by a set <m>S</m> need not include each element of <m>S</m> in its expression. For example, \(\neg q \land  r\) is a proposition generated  by <m>p, q</m>, and <m>r</m>.</p>
</subsection>
<exercises xml:id="exercises-3-2">
<title>Exercises for Section 3.2 </title>

<exercise number="1">
<statement><p>Construct the truth tables of:
<ol label="(a)" cols="2">
<li><p> \(p\lor p\) </p></li>
<li><p> \(p\land (\neg p)\)  </p></li>
<li><p> \(p\lor (\neg p)\) </p></li>
<li><p>  \(p \land p\) </p></li>
</ol> </p>
</statement>
<answer> <p><ol label="(a)"><li><p> \(\begin{array}{cc}
 p &amp; p\lor p \\
\hline
 0 &amp; 0 \\
 1 &amp; 1 \\
\end{array}\) </p></li>
<li>  \(\begin{array}{ccc}
 p &amp; \neg p &amp; p\land p \\
\hline
 0 &amp; 1 &amp; 0 \\
 1 &amp; 0 &amp; 0 \\
\end{array}\) </li>
<li> \(\begin{array}{ccc}
 p &amp; \neg p &amp; p\land (\neg p) \\
\hline
 0 &amp; 1 &amp; 1 \\
 1 &amp; 0 &amp; 1 \\
\end{array}\)</li>
<li>  \(\begin{array}{cc}
 p &amp; p\land p \\
\hline
 0 &amp; 0 \\
 1 &amp; 1 \\
\end{array}\)
</li>
</ol></p>
</answer>
</exercise>
<exercise number="2">
<statement><p>Construct the truth tables of:
<ol label="(a)" cols="2">
<li><p>  \(\neg (p\land  q )\)</p></li>
<li><p> \(p \land  (\neg q)\) </p></li>
<li><p> \((p \land q)\land r\) </p></li>
<li><p> \((p \land q) \lor (q \land r)\lor (r \land  p)\)</p></li>
<li><p> \(\text{  }\neg  p\lor  \neg q\)</p></li>
<li><p>  \(p \lor  q \lor  r \lor s\)</p></li>
</ol></p>
</statement>
</exercise>
<exercise number="3">
<statement><p> Rewrite the following with as few extraneous parentheses as possible:
<ol label="(a)"  cols="2">
<li><p>  \((\neg ((p) \land  (r))) \lor  (s)\) </p></li>
<li><p> \(((p) \lor  (q)) \land  ((r) \lor  (q))\)</p></li>
</ol></p>
</statement>
<answer><p><ol label="(a)"><li><p> \(\neg (p\land r) \lor  s\) </p></li>
<li><p> \((p\lor q) \land  (r\lor q)\)</p></li>
</ol></p>
</answer></exercise>
<exercise number="4">
<statement><p>In what order are the operations in the following propositions performed?
<ol label="(a)" cols="2">
<li><p> \(p \lor  \neg q \lor  r\land  \neg p\)</p></li>
<li><p> \(p \land  \neg  q \land  r \land  \neg  p\)</p></li>
</ol></p>
</statement>
</exercise>
<exercise number="5">
<statement><p>Determine the number of rows in the truth table of a proposition containing four variables \(p, q, r, \textrm{ and }   s\).</p>
</statement>
<answer><p>\(2^4 = 16\) rows.</p></answer>
</exercise>
<exercise number="6">
<statement><p> If there are 45 lines on a sheet of paper, and you want to reserve one line for each line in a truth table, how large could \(\lvert S\rvert \) be if you can write truth tables of propositions generated by <m>S</m> on the sheet of paper?
</p></statement>
</exercise>

</exercises>
</section>